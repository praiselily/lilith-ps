<# 
    downloads ftk imager to current path
    to run: cd to your directory and run this script (run your invoke as admin)
#>


$principal = New-Object Security.Principal.WindowsPrincipal([Security.Principal.WindowsIdentity]::GetCurrent())
if (-not $principal.IsInRole([Security.Principal.WindowsBuiltinRole]::Administrator)) {
    Write-Warning "This script is not running elevated. The installer may fail to install without Administrator rights."
}

$downloadUrl = "https://d1kpmuwb7gvu1i.cloudfront.net/AccessData_FTK_Imager_4.7.1.exe"
$tempInstaller = Join-Path $env:TEMP "AccessData_FTK_Imager_4.7.1.exe"
$installDir = (Get-Location).Path

try {
    Write-Host "Downloading FTK Imager installer..." -ForegroundColor Cyan
    Invoke-WebRequest -Uri $downloadUrl -OutFile $tempInstaller -ErrorAction Stop
    Write-Host "Download complete: $tempInstaller" -ForegroundColor Green
    Write-Host "Installing FTK Imager to: $installDir" -ForegroundColor Cyan

    
    $args = @("/S", "/D=$installDir")
    $proc = Start-Process -FilePath $tempInstaller -ArgumentList $args -Wait -PassThru -ErrorAction Stop

   
    if ($null -ne $proc -and $proc.HasExited) {
        if ($proc.ExitCode -eq 0) {
            Write-Host "FTK Imager installation completed successfully in: $installDir" -ForegroundColor Green
            
            try {
                Remove-Item -Path $tempInstaller -Force -ErrorAction Stop
                Write-Host "Removed temporary installer." -ForegroundColor DarkGreen
            } catch {
                Write-Warning "Failed to remove temporary installer: $($_.Exception.Message)"
            }
        } else {
            Write-Warning "Installer exited with code $($proc.ExitCode). Check installer logs or run installer interactively."
            Write-Host "Installer file kept at: $tempInstaller" -ForegroundColor Yellow
        }
    } else {
        Write-Warning "Could not obtain installer process info. Installer file kept at: $tempInstaller"
    }

} catch {
    Write-Error "An error occurred: $($_.Exception.Message)"
    if (Test-Path $tempInstaller) {
        Write-Host "Installer downloaded to: $tempInstaller" -ForegroundColor Yellow
    }
}
